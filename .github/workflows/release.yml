name: Release

on:
  push:
    tags:
      - 'v*'

jobs:
  build-and-release:
    name: Build and Release
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4
      
      - uses: oven-sh/setup-bun@v2
        with:
          bun-version: latest
      
      - name: Install dependencies
        run: bun install
      
      - name: Build extension
        run: bun run build
      
      - name: Sign Firefox extension
        run: |
          # Install web-ext
          npm install -g web-ext
          
          # Create a temporary directory for signing
          mkdir -p dist/firefox-unpacked dist/signed
          
          # Unpack the Firefox extension
          cd dist
          unzip firefox.zip -d firefox-unpacked
          
          # Sign the Firefox extension
          cd firefox-unpacked
          web-ext sign \
            --channel=unlisted \
            --api-key=${{ secrets.AMO_JWT_ISSUER }} \
            --api-secret=${{ secrets.AMO_JWT_SECRET }} \
            --artifacts-dir=../signed \
            --no-input
          
          # The signed XPI will have a different name, so we need to rename it
          # Find the signed XPI and rename it
          cd ../signed
          SIGNED_XPI=$(ls *.xpi | head -n 1)
          if [ -n "$SIGNED_XPI" ]; then
            mv "$SIGNED_XPI" ../firefox.xpi
            echo "✅ Firefox extension signed successfully"
          else
            echo "❌ Failed to sign Firefox extension"
            exit 1
          fi
      
      - name: Install Chrome
        uses: browser-actions/setup-chrome@v1
      
      - name: Run tests
        run: |
          export PUPPETEER_SKIP_CHROMIUM_DOWNLOAD=true
          export PUPPETEER_EXECUTABLE_PATH=$(which chrome)
          xvfb-run -a bun test --timeout 60000
        env:
          CI: true
      
      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            dist/chrome.zip
            dist/firefox.xpi
          generate_release_notes: true
          prerelease: ${{ contains(github.ref, '-beta') || contains(github.ref, '-rc') }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}